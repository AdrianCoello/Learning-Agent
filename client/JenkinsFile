pipeline {
  agent any
  tools { nodejs 'node20' }

  environment {
    CI = 'true'
    NODE_ENV = 'production'
    VITE_URL = 'http://localhost:3000'
  }

  stages {
    stage('Checkout'){ steps { checkout scm } }

    stage('Build frontend') {
      steps {
        dir('client') {
          sh 'node -v && npm -v'
          sh 'npm ci --include=dev'
          sh 'npm run build'
        }
      }
    }

    stage('Artefactos') {
      steps {
        archiveArtifacts artifacts: 'client/dist/**', fingerprint: true
      }
    }
    stage('Deploy to Vercel (prod)') {
      steps {
        withCredentials([
          string(credentialsId: 'VERCEL_TOKEN',      variable: 'VERCEL_TOKEN'),
          string(credentialsId: 'VERCEL_ORG_ID',     variable: 'VERCEL_ORG_ID'),
          string(credentialsId: 'VERCEL_PROJECT_ID', variable: 'VERCEL_PROJECT_ID')
        ]) {
          sh '''
            set -e

            # Opcional: desactivar telemetry de la CLI en CI
            export VERCEL_CLI_TELEMETRY_DISABLED=1

            npx --yes vercel@latest --version

            # Crear el archivo de link para la CLI (.vercel/project.json)
            mkdir -p .vercel
            cat > .vercel/project.json <<JSON
        {
          "orgId": "${VERCEL_ORG_ID}",
          "projectId": "${VERCEL_PROJECT_ID}"
        }
        JSON

                # Ya que build fue hecho, usamos --prebuilt y desplegamos la carpeta dist
                npx --yes vercel@latest deploy dist \
                  --prod \
                  --yes \
                  --confirm \
                  --prebuilt \
                  --token "${VERCEL_TOKEN}"
              '''
            }
          }
        }
      }
    }
  }
}
